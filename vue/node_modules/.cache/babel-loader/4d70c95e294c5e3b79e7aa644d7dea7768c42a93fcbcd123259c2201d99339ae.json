{"ast":null,"code":"import _Upload2 from \"element-ui/lib/theme-chalk/upload.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Upload from \"element-ui/lib/upload\";\nimport { extend } from \"vee-validate\";\nimport { required, email } from \"vee-validate/dist/rules\";\nextend(\"required\", required);\nextend(\"email\", email);\nexport default {\n  components: {\n    [_Upload.name]: _Upload\n  },\n  data() {\n    return {\n      image: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      imageUrl: 'static/img/default-avatar.png'\n    };\n  },\n  methods: {\n    handlePreview(file) {\n      this.imageUrl.imageUrl = URL.createObjectURL(file.raw);\n    },\n    validate() {\n      return this.$refs.form.validate().then(res => {\n        this.$emit('on-validated', res, this.imageUrl);\n        return res;\n      });\n    }\n  }\n};","map":{"version":3,"names":["extend","required","email","components","_Upload","name","data","image","firstName","lastName","imageUrl","methods","handlePreview","file","URL","createObjectURL","raw","validate","$refs","form","then","res","$emit"],"sources":["src/components/Dashboard/Views/Forms/Wizard/FirstStep.vue"],"sourcesContent":["<template>\n  <ValidationObserver ref=\"form\">\n    <form @submit.prevent=\"validate\">\n      <h5 class=\"info-text\"> Let's start with the basic information (with validation)</h5>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-sm-4\">\n          <div class=\"picture-container\">\n            <el-upload class=\"picture\"\n                       action=\"https://jsonplaceholder.typicode.com/posts/\"\n                       :on-change=\"handlePreview\"\n                       :auto-upload=\"false\"\n                       :show-file-list=\"false\">\n              <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"picture-src\">\n            </el-upload>\n            <h6 class=\"description\">Choose Picture</h6>\n          </div>\n        </div>\n        <div class=\"col-sm-6\">\n          <ValidationProvider\n            name=\"firstName\"\n            rules=\"required\"\n            v-slot=\"{ passed, failed }\"\n          >\n            <fg-input name=\"firstName\"\n                      :error=\"failed ? 'The First Name field is required': null\"\n                      :hasSuccess=\"passed\"\n                      placeholder=\"First Name (required)\"\n                      v-model=\"firstName\"\n                      addon-left-icon=\"nc-icon nc-single-02\">\n            </fg-input>\n          </ValidationProvider>\n\n          <ValidationProvider\n            name=\"lastName\"\n            rules=\"required\"\n            v-slot=\"{ passed, failed }\"\n          >\n            <fg-input name=\"lastName\"\n                      :error=\"failed ? 'The Last Name field is required': null\"\n                      :hasSuccess=\"passed\"\n                      placeholder=\"Last Name (required)\"\n                      v-model=\"lastName\"\n                      addon-left-icon=\"nc-icon nc-circle-10\">\n            </fg-input>\n          </ValidationProvider>\n        </div>\n        <div class=\"col-12 col-sm-10 mt-3\">\n          <ValidationProvider\n            name=\"email\"\n            rules=\"required|email\"\n            v-slot=\"{ passed, failed }\"\n          >\n            <fg-input name=\"email\"\n                      :error=\"failed ? 'The Email field is required': null\"\n                      :hasSuccess=\"passed\"\n                      placeholder=\"Email (required)\"\n                      v-model=\"email\"\n                      addon-left-icon=\"nc-icon nc-send\">\n            </fg-input>\n          </ValidationProvider>\n        </div>\n      </div>\n    </form>\n  </ValidationObserver>\n</template>\n<script>\n  import {Upload} from 'element-ui';\n  import { extend } from \"vee-validate\";\n  import { required, email } from \"vee-validate/dist/rules\";\n\n  extend(\"required\", required);\n  extend(\"email\", email);\n\n  export default {\n    components: {\n      [Upload.name]: Upload\n    },\n    data() {\n      return {\n        image: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        imageUrl: 'static/img/default-avatar.png'\n      };\n    },\n    methods: {\n      handlePreview(file) {\n        this.imageUrl.imageUrl = URL.createObjectURL(file.raw);\n      },\n      validate() {\n        return this.$refs.form.validate().then(res => {\n          this.$emit('on-validated', res, this.imageUrl)\n          return res\n        })\n      }\n    }\n  }\n</script>\n<style lang=\"scss\">\n  .card-wizard .picture-container .picture {\n    input[type=\"file\"] {\n      display: none;\n    }\n  }\n</style>\n"],"mappings":";;;AAmEA,SAAAA,MAAA;AACA,SAAAC,QAAA,EAAAC,KAAA;AAEAF,MAAA,aAAAC,QAAA;AACAD,MAAA,UAAAE,KAAA;AAEA;EACAC,UAAA;IACA,CAAAC,OAAA,CAAAC,IAAA,GAAAD;EACA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,SAAA;MACAC,QAAA;MACAP,KAAA;MACAQ,QAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAAC,IAAA;MACA,KAAAH,QAAA,CAAAA,QAAA,GAAAI,GAAA,CAAAC,eAAA,CAAAF,IAAA,CAAAG,GAAA;IACA;IACAC,SAAA;MACA,YAAAC,KAAA,CAAAC,IAAA,CAAAF,QAAA,GAAAG,IAAA,CAAAC,GAAA;QACA,KAAAC,KAAA,iBAAAD,GAAA,OAAAX,QAAA;QACA,OAAAW,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}