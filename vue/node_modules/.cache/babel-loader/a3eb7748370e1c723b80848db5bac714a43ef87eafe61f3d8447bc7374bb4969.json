{"ast":null,"code":"import { SlideYUpTransition } from 'vue2-transitions';\nexport default {\n  name: 'modal',\n  components: {\n    SlideYUpTransition\n  },\n  props: {\n    show: Boolean,\n    showHeader: {\n      type: Boolean,\n      default: true\n    },\n    showClose: {\n      type: Boolean,\n      default: true\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        let acceptedValues = ['', 'notice', 'mini'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Modal type (notice|mini|\"\") '\n    },\n    modalClasses: {\n      type: [Object, String],\n      description: 'Modal dialog css classes'\n    },\n    headerClasses: {\n      type: [Object, String],\n      description: 'Modal Header css classes'\n    },\n    bodyClasses: {\n      type: [Object, String],\n      description: 'Modal Body css classes'\n    },\n    footerClasses: {\n      type: [Object, String],\n      description: 'Modal Footer css classes'\n    },\n    animationDuration: {\n      type: Number,\n      default: 500,\n      description: 'Modal transition duration'\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('update:show', false);\n      this.$emit('close');\n    }\n  },\n  watch: {\n    show(val) {\n      let documentClasses = document.body.classList;\n      if (val) {\n        documentClasses.add('modal-open');\n      } else {\n        documentClasses.remove('modal-open');\n      }\n    }\n  }\n};","map":{"version":3,"names":["SlideYUpTransition","name","components","props","show","Boolean","showHeader","type","default","showClose","String","validator","value","acceptedValues","indexOf","description","modalClasses","Object","headerClasses","bodyClasses","footerClasses","animationDuration","Number","methods","closeModal","$emit","watch","val","documentClasses","document","body","classList","add","remove"],"sources":["src/components/UIComponents/Modal.vue"],"sourcesContent":["<template>\n  <SlideYUpTransition :duration=\"animationDuration\">\n    <div class=\"modal fade\"\n         @click.self=\"closeModal\"\n         :class=\"[{'show d-block': show}, {'d-none': !show}, {'modal-mini': type === 'mini'}]\"\n         v-show=\"show\"\n         tabindex=\"-1\"\n         role=\"dialog\"\n         :aria-hidden=\"!show\">\n\n      <div class=\"modal-dialog\"\n           :class=\"[{'modal-notice': type === 'notice'}, modalClasses]\">\n        <div class=\"modal-content\">\n\n          <div class=\"modal-header\"\n               v-if=\"showHeader\"\n               :class=\"headerClasses\">\n            <slot name=\"close-button\">\n              <button type=\"button\"\n                      v-if=\"showClose\"\n                      @click=\"closeModal\"\n                      class=\"close\"\n                      data-dismiss=\"modal\"\n                      :aria-hidden=\"!show\">\n                <i class=\"nc-icon nc-simple-remove\"></i>\n              </button>\n            </slot>\n            <slot name=\"header\"></slot>\n          </div>\n\n          <div class=\"modal-body\" :class=\"bodyClasses\">\n            <slot></slot>\n          </div>\n\n          <div class=\"modal-footer\" :class=\"footerClasses\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </SlideYUpTransition>\n</template>\n<script>\n  import {SlideYUpTransition} from 'vue2-transitions'\n\n  export default {\n    name: 'modal',\n    components: {\n      SlideYUpTransition\n    },\n    props: {\n      show: Boolean,\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n      showClose: {\n        type: Boolean,\n        default: true\n      },\n      type: {\n        type: String,\n        default: '',\n        validator(value) {\n          let acceptedValues = ['', 'notice', 'mini']\n          return acceptedValues.indexOf(value) !== -1\n        },\n        description: 'Modal type (notice|mini|\"\") '\n      },\n      modalClasses: {\n        type: [Object, String],\n        description: 'Modal dialog css classes'\n      },\n      headerClasses: {\n        type: [Object, String],\n        description: 'Modal Header css classes'\n      },\n      bodyClasses: {\n        type: [Object, String],\n        description: 'Modal Body css classes'\n      },\n      footerClasses: {\n        type: [Object, String],\n        description: 'Modal Footer css classes'\n      },\n      animationDuration: {\n        type: Number,\n        default: 500,\n        description: 'Modal transition duration'\n      }\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:show', false)\n        this.$emit('close')\n      }\n    },\n    watch: {\n      show(val) {\n        let documentClasses = document.body.classList\n        if (val) {\n          documentClasses.add('modal-open')\n        } else {\n          documentClasses.remove('modal-open')\n        }\n      }\n    }\n  }\n</script>\n<style>\n  .modal.show {\n    background-color: rgba(0, 0, 0, 0.3)\n  }\n</style>\n"],"mappings":"AA4CA,SAAAA,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,IAAA,EAAAC,OAAA;IACAC,UAAA;MACAC,IAAA,EAAAF,OAAA;MACAG,OAAA;IACA;IACAC,SAAA;MACAF,IAAA,EAAAF,OAAA;MACAG,OAAA;IACA;IACAD,IAAA;MACAA,IAAA,EAAAG,MAAA;MACAF,OAAA;MACAG,UAAAC,KAAA;QACA,IAAAC,cAAA;QACA,OAAAA,cAAA,CAAAC,OAAA,CAAAF,KAAA;MACA;MACAG,WAAA;IACA;IACAC,YAAA;MACAT,IAAA,GAAAU,MAAA,EAAAP,MAAA;MACAK,WAAA;IACA;IACAG,aAAA;MACAX,IAAA,GAAAU,MAAA,EAAAP,MAAA;MACAK,WAAA;IACA;IACAI,WAAA;MACAZ,IAAA,GAAAU,MAAA,EAAAP,MAAA;MACAK,WAAA;IACA;IACAK,aAAA;MACAb,IAAA,GAAAU,MAAA,EAAAP,MAAA;MACAK,WAAA;IACA;IACAM,iBAAA;MACAd,IAAA,EAAAe,MAAA;MACAd,OAAA;MACAO,WAAA;IACA;EACA;EACAQ,OAAA;IACAC,WAAA;MACA,KAAAC,KAAA;MACA,KAAAA,KAAA;IACA;EACA;EACAC,KAAA;IACAtB,KAAAuB,GAAA;MACA,IAAAC,eAAA,GAAAC,QAAA,CAAAC,IAAA,CAAAC,SAAA;MACA,IAAAJ,GAAA;QACAC,eAAA,CAAAI,GAAA;MACA;QACAJ,eAAA,CAAAK,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}