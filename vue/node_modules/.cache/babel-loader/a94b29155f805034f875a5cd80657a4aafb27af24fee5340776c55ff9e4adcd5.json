{"ast":null,"code":"export default {\n  name: 'p-checkbox',\n  model: {\n    prop: 'checked'\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: 'Whether checkbox is checked'\n    },\n    disabled: {\n      type: Boolean,\n      description: 'Whether checkbox is disabled'\n    },\n    inline: {\n      type: Boolean,\n      description: 'Whether checkbox is inline'\n    }\n  },\n  data() {\n    return {\n      cbId: '',\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit('input', check);\n      }\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n    }\n  },\n  created() {\n    this.cbId = Math.random().toString(16).slice(2);\n  }\n};","map":{"version":3,"names":["name","model","prop","props","checked","type","Array","Boolean","description","disabled","inline","data","cbId","touched","computed","get","set","check","$emit","inlineClass","created","Math","random","toString","slice"],"sources":["src/components/UIComponents/Inputs/Checkbox.vue"],"sourcesContent":["<template>\n  <div class=\"form-check\"\n       :class=\"[{disabled: disabled}, inlineClass]\">\n    <label :for=\"cbId\" class=\"form-check-label\">\n      <input :id=\"cbId\"\n             class=\"form-check-input\"\n             type=\"checkbox\"\n             :disabled=\"disabled\"\n             v-model=\"model\"/>\n      <span class=\"form-check-sign\"></span>\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'p-checkbox',\n    model: {\n      prop: 'checked'\n    },\n    props: {\n      checked: {\n        type: [Array, Boolean],\n        description: 'Whether checkbox is checked'\n      },\n      disabled: {\n        type: Boolean,\n        description: 'Whether checkbox is disabled'\n      },\n      inline: {\n        type: Boolean,\n        description: 'Whether checkbox is inline'\n      }\n    },\n    data() {\n      return {\n        cbId: '',\n        touched: false\n      }\n    },\n    computed: {\n      model: {\n        get() {\n          return this.checked\n        },\n        set(check) {\n          if (!this.touched) {\n            this.touched = true\n          }\n          this.$emit('input', check)\n        }\n      },\n      inlineClass() {\n        if (this.inline) {\n          return `form-check-inline`\n        }\n      }\n    },\n    created() {\n      this.cbId = Math.random().toString(16).slice(2)\n    }\n  }\n</script>\n"],"mappings":"AAiBA;EACAA,IAAA;EACAC,KAAA;IACAC,IAAA;EACA;EACAC,KAAA;IACAC,OAAA;MACAC,IAAA,GAAAC,KAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAC,QAAA;MACAJ,IAAA,EAAAE,OAAA;MACAC,WAAA;IACA;IACAE,MAAA;MACAL,IAAA,EAAAE,OAAA;MACAC,WAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAb,KAAA;MACAc,IAAA;QACA,YAAAX,OAAA;MACA;MACAY,IAAAC,KAAA;QACA,UAAAJ,OAAA;UACA,KAAAA,OAAA;QACA;QACA,KAAAK,KAAA,UAAAD,KAAA;MACA;IACA;IACAE,YAAA;MACA,SAAAT,MAAA;QACA;MACA;IACA;EACA;EACAU,QAAA;IACA,KAAAR,IAAA,GAAAS,IAAA,CAAAC,MAAA,GAAAC,QAAA,KAAAC,KAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}