{"ast":null,"code":"export default {\n  name: 'drop-down',\n  props: {\n    direction: {\n      type: String,\n      default: 'down',\n      description: 'Drop down menu direction (up|down)'\n    },\n    title: String,\n    icon: String,\n    position: {\n      type: String,\n      description: 'Drop down menu arrow position (left|right)'\n    },\n    hideArrow: {\n      type: Boolean,\n      description: 'Whether to hide drop down arrow'\n    },\n    tag: {\n      type: String,\n      default: 'li',\n      description: 'Html tag of the dropdnown'\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  computed: {\n    directionAttribute: function directionAttribute() {\n      var baseDirection = '';\n      if (this.direction === 'up') {\n        baseDirection = 'top-start';\n      } else if (this.direction === 'down') {\n        baseDirection = 'bottom-start';\n      }\n      return baseDirection;\n    }\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', this.isOpen);\n    }\n  }\n};","map":{"version":3,"names":["name","props","direction","type","String","default","description","title","icon","position","hideArrow","Boolean","tag","data","isOpen","computed","directionAttribute","baseDirection","methods","toggleDropDown","$emit","closeDropDown"],"sources":["src/components/UIComponents/Dropdown.vue"],"sourcesContent":["<template>\n  <component class=\"dropdown\"\n             :is=\"tag\"\n             :class=\"[{show: isOpen}]\"\n             aria-haspopup=\"true\"\n             :aria-expanded=\"isOpen\"\n             @click=\"toggleDropDown\"\n             v-click-outside=\"closeDropDown\">\n    <slot name=\"title\" :is-open=\"isOpen\">\n      <a class=\"dropdown-toggle nav-link\"\n         :class=\"{'no-caret': hideArrow}\"\n         data-toggle=\"dropdown\">\n        <i :class=\"icon\"></i>\n        <span class=\"no-icon\">{{title}}</span>\n      </a>\n    </slot>\n    <ul class=\"dropdown-menu\"\n        :x-placement=\"directionAttribute\"\n        :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}]\">\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\n  export default {\n    name: 'drop-down',\n    props: {\n      direction: {\n        type: String,\n        default: 'down',\n        description: 'Drop down menu direction (up|down)'\n      },\n      title: String,\n      icon: String,\n      position: {\n        type: String,\n        description: 'Drop down menu arrow position (left|right)'\n      },\n      hideArrow: {\n        type: Boolean,\n        description: 'Whether to hide drop down arrow'\n      },\n      tag: {\n        type: String,\n        default: 'li',\n        description: 'Html tag of the dropdnown'\n      }\n    },\n    data() {\n      return {\n        isOpen: false\n      }\n    },\n    computed: {\n      directionAttribute() {\n        let baseDirection = '';\n        if(this.direction === 'up'){\n          baseDirection = 'top-start';\n        } else if(this.direction === 'down') {\n          baseDirection = 'bottom-start';\n        }\n        return baseDirection;\n      }\n    },\n    methods: {\n      toggleDropDown() {\n        this.isOpen = !this.isOpen\n        this.$emit('change', this.isOpen)\n      },\n      closeDropDown() {\n        this.isOpen = false\n        this.$emit('change', this.isOpen)\n      }\n    }\n  }\n</script>\n<style>\n  .dropdown {\n    list-style-type: none;\n  }\n\n  .dropdown .dropdown-toggle {\n    cursor: pointer;\n  }\n</style>\n"],"mappings":"AAwBA;EACAA,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAC,KAAA,EAAAH,MAAA;IACAI,IAAA,EAAAJ,MAAA;IACAK,QAAA;MACAN,IAAA,EAAAC,MAAA;MACAE,WAAA;IACA;IACAI,SAAA;MACAP,IAAA,EAAAQ,OAAA;MACAL,WAAA;IACA;IACAM,GAAA;MACAT,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;EACA;EACAO,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,kBAAA,WAAAA,mBAAA;MACA,IAAAC,aAAA;MACA,SAAAf,SAAA;QACAe,aAAA;MACA,gBAAAf,SAAA;QACAe,aAAA;MACA;MACA,OAAAA,aAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MACA,KAAAL,MAAA,SAAAA,MAAA;MACA,KAAAM,KAAA,gBAAAN,MAAA;IACA;IACAO,aAAA,WAAAA,cAAA;MACA,KAAAP,MAAA;MACA,KAAAM,KAAA,gBAAAN,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}