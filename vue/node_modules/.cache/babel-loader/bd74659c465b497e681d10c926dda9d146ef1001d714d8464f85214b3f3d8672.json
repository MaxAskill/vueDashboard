{"ast":null,"code":"import _defineProperty from \"/var/www/html/PRESTO/vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _components;\nimport \"core-js/modules/es.function.name.js\";\nimport Swal from 'sweetalert2';\nimport { Button, Card } from 'src/components/UIComponents';\nexport default {\n  components: (_components = {}, _defineProperty(_components, Button.name, Button), _defineProperty(_components, \"Card\", Card), _components),\n  methods: {\n    showSwal: function showSwal(type) {\n      if (type === \"basic\") {\n        var swalWithBootstrapButtons = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons.fire({\n          title: \"Here's a message!\"\n        });\n      } else if (type === \"title-and-text\") {\n        var swalWithBootstrapButtons2 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-info\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons2.fire({\n          title: \"Here's a message!\",\n          text: \"It's pretty, isn't it?\"\n        });\n      } else if (type === \"success-message\") {\n        var swalWithBootstrapButtons3 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons3.fire({\n          title: \"Good job!\",\n          text: \"You clicked the button!\"\n        });\n      } else if (type === \"warning-message-and-confirmation\") {\n        var swalWithBootstrapButtons4 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons4.fire({\n          title: \"Are you sure?\",\n          text: \"You won't be able to revert this!\",\n          confirmButtonText: \"Yes, delete it!\",\n          cancelButtonText: \"Cancel\",\n          showCancelButton: true\n        }).then(function (result) {\n          if (result.value) {\n            var swalWithBootstrapButtons5 = Swal.mixin({\n              customClass: {\n                confirmButton: \"btn btn-success\"\n              },\n              buttonsStyling: false\n            });\n            swalWithBootstrapButtons5.fire({\n              title: \"Deleted!\",\n              text: \"Your file has been deleted.\"\n            });\n          }\n        });\n      } else if (type === \"warning-message-and-cancel\") {\n        var swalWithBootstrapButtons6 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons6.fire({\n          title: \"Are you sure?\",\n          text: \"You will not be able to recover this imaginary file!\",\n          confirmButtonText: \"Yes, delete it!\",\n          cancelButtonText: \"No, keep it\",\n          showCancelButton: true\n        }).then(function (result) {\n          if (result.value) {\n            var _swalWithBootstrapButtons = Swal.mixin({\n              customClass: {\n                confirmButton: \"btn btn-success\"\n              },\n              buttonsStyling: false\n            });\n            _swalWithBootstrapButtons.fire({\n              title: \"Deleted!\",\n              text: \"Your imaginary file has been deleted.\"\n            });\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\n            var swalWithBootstrapButtons7 = Swal.mixin({\n              customClass: {\n                confirmButton: \"btn btn-info\"\n              },\n              buttonsStyling: false\n            });\n            swalWithBootstrapButtons7.fire({\n              title: \"Cancelled\",\n              text: \"Your imaginary file is safe :)\"\n            });\n          }\n        });\n      } else if (type === \"custom-html\") {\n        var swalWithBootstrapButtons8 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons8.fire({\n          title: \"HTML example\",\n          html: \"You can use <b>bold text</b>,\\n          <a href=\\\"http://github.com\\\">links</a>\\n          and other HTML tags\"\n        });\n      } else if (type === \"auto-close\") {\n        Swal.fire({\n          title: \"Auto close alert!\",\n          text: \"I will close in 2 seconds.\",\n          timer: 2000,\n          showConfirmButton: false\n        });\n      } else if (type === \"input-field\") {\n        var swalWithBootstrapButtons9 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\"\n          },\n          buttonsStyling: false\n        });\n        swalWithBootstrapButtons9.fire({\n          title: \"Input something\",\n          html: \"<div class=\\\"form-group\\\">\\n          <input id=\\\"input-field\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\n          </div>\",\n          showCancelButton: true\n        }).then(function () {\n          var swalWithBootstrapButtons10 = Swal.mixin({\n            customClass: {\n              confirmButton: \"btn btn-success\"\n            },\n            buttonsStyling: false\n          });\n          swalWithBootstrapButtons10.fire({\n            html: \"You entered: <strong>\" + document.getElementById(\"input-field\").value + \"</strong>\"\n          });\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swal","Button","Card","components","_components","_defineProperty","name","methods","showSwal","type","swalWithBootstrapButtons","mixin","customClass","confirmButton","buttonsStyling","fire","title","swalWithBootstrapButtons2","text","swalWithBootstrapButtons3","swalWithBootstrapButtons4","cancelButton","confirmButtonText","cancelButtonText","showCancelButton","then","result","value","swalWithBootstrapButtons5","swalWithBootstrapButtons6","dismiss","DismissReason","cancel","swalWithBootstrapButtons7","swalWithBootstrapButtons8","html","timer","showConfirmButton","swalWithBootstrapButtons9","swalWithBootstrapButtons10","document","getElementById"],"sources":["src/components/Dashboard/Views/Components/SweetAlert.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <h4 class=\"card-title\">Sweet Alert 2</h4>\n    <p class=\"category\">A beautiful plugin, that replace the classic alert, Handcrafted by our friend <a target=\"_blank\"\n                                                                                                         rel=\"noopener\"\n                                                                                                         href=\"https://twitter.com/t4t5\">Tristan Edwards</a>. Please check out the <a\n      href=\"http://limonte.github.io/sweetalert2/\" target=\"_blank\" rel=\"noopener\">full documentation.</a></p>\n\n    <br><br>\n\n    <div class=\"places-sweet-alerts\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">Basic example</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('basic')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">A title with a text under</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('title-and-text')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">A success message</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('success-message')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">Custom HTML description</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('custom-html')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">A warning message, with a function attached to the \"Confirm\" Button...</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('warning-message-and-confirmation')\">\n                Try me!\n              </p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">...and by passing a parameter, you can execute something else for \"Cancel\"</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('warning-message-and-cancel')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">A message with auto close timer set to 2 seconds</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('auto-close')\">Try me!</p-button>\n          </card>\n        </div>\n        <div class=\"col-md-3\">\n          <card card-body-classes=\"text-center\">\n              <p class=\"card-text\">Modal window with input field</p>\n              <p-button type=\"default\" round outline @click=\"showSwal('input-field')\">Try me!</p-button>\n          </card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import Swal from 'sweetalert2';\n  import {Button, Card} from 'src/components/UIComponents';\n  export default {\n    components: {\n      [Button.name]: Button,\n      Card\n    },\n    methods: {\n      showSwal (type) {\n        if (type === \"basic\") {\n        const swalWithBootstrapButtons = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons.fire({\n          title: `Here's a message!`,\n        });\n      } else if (type === \"title-and-text\") {\n        const swalWithBootstrapButtons2 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-info\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons2.fire({\n          title: `Here's a message!`,\n          text: `It's pretty, isn't it?`,\n        });\n      } else if (type === \"success-message\") {\n        const swalWithBootstrapButtons3 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons3.fire({\n          title: `Good job!`,\n          text: \"You clicked the button!\",\n        });\n      } else if (type === \"warning-message-and-confirmation\") {\n        const swalWithBootstrapButtons4 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons4\n          .fire({\n            title: \"Are you sure?\",\n            text: `You won't be able to revert this!`,\n            confirmButtonText: \"Yes, delete it!\",\n            cancelButtonText: \"Cancel\",\n            showCancelButton: true,\n          })\n          .then((result) => {\n            if (result.value) {\n              const swalWithBootstrapButtons5 = Swal.mixin({\n                customClass: {\n                  confirmButton: \"btn btn-success\",\n                },\n                buttonsStyling: false,\n              });\n              swalWithBootstrapButtons5.fire({\n                title: \"Deleted!\",\n                text: \"Your file has been deleted.\",\n              });\n            }\n          });\n      } else if (type === \"warning-message-and-cancel\") {\n        const swalWithBootstrapButtons6 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons6\n          .fire({\n            title: \"Are you sure?\",\n            text: \"You will not be able to recover this imaginary file!\",\n            confirmButtonText: \"Yes, delete it!\",\n            cancelButtonText: \"No, keep it\",\n            showCancelButton: true,\n          })\n          .then((result) => {\n            if (result.value) {\n              const swalWithBootstrapButtons6 = Swal.mixin({\n                customClass: {\n                  confirmButton: \"btn btn-success\",\n                },\n                buttonsStyling: false,\n              });\n              swalWithBootstrapButtons6.fire({\n                title: \"Deleted!\",\n                text: \"Your imaginary file has been deleted.\",\n              });\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n              const swalWithBootstrapButtons7 = Swal.mixin({\n                customClass: {\n                  confirmButton: \"btn btn-info\",\n                },\n                buttonsStyling: false,\n              });\n              swalWithBootstrapButtons7.fire({\n                title: \"Cancelled\",\n                text: \"Your imaginary file is safe :)\",\n              });\n            }\n          });\n      } else if (type === \"custom-html\") {\n        const swalWithBootstrapButtons8 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons8.fire({\n          title: \"HTML example\",\n          html: `You can use <b>bold text</b>,\n            <a href=\"http://github.com\">links</a>\n            and other HTML tags`,\n        });\n      } else if (type === \"auto-close\") {\n        Swal.fire({\n          title: \"Auto close alert!\",\n          text: \"I will close in 2 seconds.\",\n          timer: 2000,\n          showConfirmButton: false,\n        });\n      } else if (type === \"input-field\") {\n        const swalWithBootstrapButtons9 = Swal.mixin({\n          customClass: {\n            confirmButton: \"btn btn-success\",\n            cancelButton: \"btn btn-danger\",\n          },\n          buttonsStyling: false,\n        });\n        swalWithBootstrapButtons9\n          .fire({\n            title: \"Input something\",\n            html: `<div class=\"form-group\">\n            <input id=\"input-field\" type=\"text\" class=\"form-control\" />\n            </div>`,\n            showCancelButton: true,\n          })\n          .then(() => {\n            const swalWithBootstrapButtons10 = Swal.mixin({\n              customClass: {\n                confirmButton: \"btn btn-success\",\n              },\n              buttonsStyling: false,\n            });\n            swalWithBootstrapButtons10.fire({\n              html:\n                \"You entered: <strong>\" +\n                document.getElementById(\"input-field\").value +\n                \"</strong>\",\n            });\n          });\n        }\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}