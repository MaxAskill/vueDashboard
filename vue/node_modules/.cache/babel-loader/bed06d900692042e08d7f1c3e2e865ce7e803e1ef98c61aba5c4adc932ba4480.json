{"ast":null,"code":"export default {\n  name: 'p-switch',\n  props: {\n    value: {\n      type: [Array, Boolean],\n      description: 'Switch value'\n    },\n    disabled: {\n      type: [Boolean, String],\n      description: 'Whether switch is disabled'\n    },\n    readonly: {\n      type: [Boolean, String],\n      description: 'Whether switch is readonly'\n    },\n    indeterminate: {\n      type: [Boolean, String],\n      description: 'Whether switch is indeterminate'\n    },\n    onText: {\n      type: String,\n      description: 'switch on text'\n    },\n    offText: {\n      type: String,\n      description: 'switch off text'\n    },\n    type: {\n      type: String,\n      description: 'Switch type (primary|info|danger|default|warning|success)',\n      default: 'default'\n    }\n  },\n  computed: {\n    switchClass() {\n      let base = 'bootstrap-switch-';\n      let state = this.model ? 'on' : 'off';\n      return base + state;\n    },\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        if (this.disabled || this.readonly) {\n          return;\n        }\n        this.$emit('input', value);\n      }\n    }\n  },\n  methods: {\n    triggerToggle() {\n      this.model = !this.model;\n    }\n  }\n};","map":{"version":3,"names":["name","props","value","type","Array","Boolean","description","disabled","String","readonly","indeterminate","onText","offText","default","computed","switchClass","base","state","model","get","set","$emit","methods","triggerToggle"],"sources":["src/components/UIComponents/Switch.vue"],"sourcesContent":["<template>\n  <div class=\"bootstrap-switch bootstrap-switch-wrapper bootstrap-switch-animate\"\n       :class=\"[switchClass,\n          {'bootstrap-switch-disabled': disabled},\n          {'bootstrap-switch-readonly': readonly},\n          {'bootstrap-switch-indeterminate': indeterminate}\n       ]\">\n    <div class=\"bootstrap-switch-container\" @click=\"triggerToggle()\">\n      <span class=\"bootstrap-switch-handle-on \" :class=\"`bootstrap-switch-${type}`\">\n        <slot name=\"on\">\n            {{onText}}\n        </slot>\n      </span>\n      <span class=\"bootstrap-switch-label\"></span>\n      <span class=\"bootstrap-switch-handle-off\" :class=\"`bootstrap-switch-${type}`\">\n        <slot name=\"off\">\n            {{offText}}\n        </slot>\n      </span>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'p-switch',\n    props: {\n      value: {\n        type: [Array, Boolean],\n        description: 'Switch value'\n      },\n      disabled: {\n        type: [Boolean, String],\n        description: 'Whether switch is disabled'\n      },\n      readonly: {\n        type: [Boolean, String],\n        description: 'Whether switch is readonly'\n      },\n      indeterminate: {\n        type: [Boolean, String],\n        description: 'Whether switch is indeterminate'\n      },\n      onText: {\n        type: String,\n        description: 'switch on text'\n      },\n      offText: {\n        type: String,\n        description: 'switch off text'\n      },\n      type: {\n        type: String,\n        description: 'Switch type (primary|info|danger|default|warning|success)',\n        default: 'default'\n      }\n    },\n    computed: {\n      switchClass() {\n        let base = 'bootstrap-switch-'\n        let state = this.model ? 'on' : 'off'\n        return base + state\n      },\n      model: {\n        get() {\n          return this.value\n        },\n        set(value) {\n          if(this.disabled || this.readonly){\n            return;\n          }\n          this.$emit('input', value)\n        }\n      }\n    },\n    methods: {\n      triggerToggle() {\n        this.model = !this.model\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"],"mappings":"AAuBA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,GAAAC,KAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAC,QAAA;MACAJ,IAAA,GAAAE,OAAA,EAAAG,MAAA;MACAF,WAAA;IACA;IACAG,QAAA;MACAN,IAAA,GAAAE,OAAA,EAAAG,MAAA;MACAF,WAAA;IACA;IACAI,aAAA;MACAP,IAAA,GAAAE,OAAA,EAAAG,MAAA;MACAF,WAAA;IACA;IACAK,MAAA;MACAR,IAAA,EAAAK,MAAA;MACAF,WAAA;IACA;IACAM,OAAA;MACAT,IAAA,EAAAK,MAAA;MACAF,WAAA;IACA;IACAH,IAAA;MACAA,IAAA,EAAAK,MAAA;MACAF,WAAA;MACAO,OAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,IAAAC,IAAA;MACA,IAAAC,KAAA,QAAAC,KAAA;MACA,OAAAF,IAAA,GAAAC,KAAA;IACA;IACAC,KAAA;MACAC,IAAA;QACA,YAAAjB,KAAA;MACA;MACAkB,IAAAlB,KAAA;QACA,SAAAK,QAAA,SAAAE,QAAA;UACA;QACA;QACA,KAAAY,KAAA,UAAAnB,KAAA;MACA;IACA;EACA;EACAoB,OAAA;IACAC,cAAA;MACA,KAAAL,KAAA,SAAAA,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}