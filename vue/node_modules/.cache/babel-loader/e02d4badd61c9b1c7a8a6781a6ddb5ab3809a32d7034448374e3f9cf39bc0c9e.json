{"ast":null,"code":"export default {\n  id: 'text-plugin',\n  beforeDraw: function beforeDraw(chart) {\n    if (chart.config.options.elements.center) {\n      var ctx = chart.chart.ctx;\n      var centerConfig = chart.config.options.elements.center;\n      var fontStyle = centerConfig.fontStyle || 'Arial';\n      var txt = centerConfig.text;\n      var color = centerConfig.color || '#000';\n      var sidePadding = centerConfig.sidePadding || 20;\n      var sidePaddingCalculated = sidePadding / 100 * (chart.innerRadius * 2);\n      ctx.font = \"30px \" + fontStyle;\n      var stringWidth = ctx.measureText(txt).width;\n      var elementWidth = chart.innerRadius * 2 - sidePaddingCalculated;\n      var widthRatio = elementWidth / stringWidth;\n      var newFontSize = Math.floor(30 * widthRatio);\n      var elementHeight = chart.innerRadius * 2;\n      var fontSizeToUse = Math.min(newFontSize, elementHeight);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var centerX = (chart.chartArea.left + chart.chartArea.right) / 2;\n      var centerY = (chart.chartArea.top + chart.chartArea.bottom) / 2;\n      ctx.font = fontSizeToUse + \"px \" + fontStyle;\n      ctx.fillStyle = color;\n      ctx.fillText(txt, centerX, centerY);\n    }\n  }\n};","map":{"version":3,"names":["id","beforeDraw","chart","config","options","elements","center","ctx","centerConfig","fontStyle","txt","text","color","sidePadding","sidePaddingCalculated","innerRadius","font","stringWidth","measureText","width","elementWidth","widthRatio","newFontSize","Math","floor","elementHeight","fontSizeToUse","min","textAlign","textBaseline","centerX","chartArea","left","right","centerY","top","bottom","fillStyle","fillText"],"sources":["/var/www/html/PRESTO/vue/src/components/UIComponents/Charts/plugins/plugin-chart-text.js"],"sourcesContent":["export default {\n  id: 'text-plugin',\n  beforeDraw: function(chart) {\n    if (chart.config.options.elements.center) {\n      //Get ctx from string\n      let ctx = chart.chart.ctx;\n\n      //Get options from the center object in options\n      let centerConfig = chart.config.options.elements.center;\n      let fontStyle = centerConfig.fontStyle || 'Arial';\n      let txt = centerConfig.text;\n      let color = centerConfig.color || '#000';\n      let sidePadding = centerConfig.sidePadding || 20;\n      let sidePaddingCalculated = (sidePadding / 100) * (chart.innerRadius * 2)\n      //Start with a base font of 30px\n      ctx.font = \"30px \" + fontStyle;\n\n      //Get the width of the string and also the width of the element minus 10 to give it 5px side padding\n      let stringWidth = ctx.measureText(txt).width;\n      let elementWidth = (chart.innerRadius * 2) - sidePaddingCalculated;\n\n      // Find out how much the font can grow in width.\n      let widthRatio = elementWidth / stringWidth;\n      let newFontSize = Math.floor(30 * widthRatio);\n      let elementHeight = (chart.innerRadius * 2);\n\n      // Pick a new font size so it will not be larger than the height of label.\n      let fontSizeToUse = Math.min(newFontSize, elementHeight);\n\n      //Set font settings to draw it correctly.\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      let centerX = ((chart.chartArea.left + chart.chartArea.right) / 2);\n      let centerY = ((chart.chartArea.top + chart.chartArea.bottom) / 2);\n      ctx.font = fontSizeToUse + \"px \" + fontStyle;\n      ctx.fillStyle = color;\n\n      //Draw text in center\n      ctx.fillText(txt, centerX, centerY);\n    }\n  }\n}\n"],"mappings":"AAAA,eAAe;EACbA,EAAE,EAAE,aAAa;EACjBC,UAAU,EAAE,SAAAA,WAASC,KAAK,EAAE;IAC1B,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM,EAAE;MAExC,IAAIC,GAAG,GAAGL,KAAK,CAACA,KAAK,CAACK,GAAG;MAGzB,IAAIC,YAAY,GAAGN,KAAK,CAACC,MAAM,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM;MACvD,IAAIG,SAAS,GAAGD,YAAY,CAACC,SAAS,IAAI,OAAO;MACjD,IAAIC,GAAG,GAAGF,YAAY,CAACG,IAAI;MAC3B,IAAIC,KAAK,GAAGJ,YAAY,CAACI,KAAK,IAAI,MAAM;MACxC,IAAIC,WAAW,GAAGL,YAAY,CAACK,WAAW,IAAI,EAAE;MAChD,IAAIC,qBAAqB,GAAID,WAAW,GAAG,GAAG,IAAKX,KAAK,CAACa,WAAW,GAAG,CAAC,CAAC;MAEzER,GAAG,CAACS,IAAI,GAAG,OAAO,GAAGP,SAAS;MAG9B,IAAIQ,WAAW,GAAGV,GAAG,CAACW,WAAW,CAACR,GAAG,CAAC,CAACS,KAAK;MAC5C,IAAIC,YAAY,GAAIlB,KAAK,CAACa,WAAW,GAAG,CAAC,GAAID,qBAAqB;MAGlE,IAAIO,UAAU,GAAGD,YAAY,GAAGH,WAAW;MAC3C,IAAIK,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAC,EAAE,GAAGH,UAAU,CAAC;MAC7C,IAAII,aAAa,GAAIvB,KAAK,CAACa,WAAW,GAAG,CAAE;MAG3C,IAAIW,aAAa,GAAGH,IAAI,CAACI,GAAG,CAACL,WAAW,EAAEG,aAAa,CAAC;MAGxDlB,GAAG,CAACqB,SAAS,GAAG,QAAQ;MACxBrB,GAAG,CAACsB,YAAY,GAAG,QAAQ;MAC3B,IAAIC,OAAO,GAAI,CAAC5B,KAAK,CAAC6B,SAAS,CAACC,IAAI,GAAG9B,KAAK,CAAC6B,SAAS,CAACE,KAAK,IAAI,CAAE;MAClE,IAAIC,OAAO,GAAI,CAAChC,KAAK,CAAC6B,SAAS,CAACI,GAAG,GAAGjC,KAAK,CAAC6B,SAAS,CAACK,MAAM,IAAI,CAAE;MAClE7B,GAAG,CAACS,IAAI,GAAGU,aAAa,GAAG,KAAK,GAAGjB,SAAS;MAC5CF,GAAG,CAAC8B,SAAS,GAAGzB,KAAK;MAGrBL,GAAG,CAAC+B,QAAQ,CAAC5B,GAAG,EAAEoB,OAAO,EAAEI,OAAO,CAAC;IACrC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}