{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport PillsLayout from './PillsLayout';\nimport TabsLayout from './TabsLayout';\nexport default {\n  name: 'tabs',\n  components: {\n    TabsLayout: TabsLayout,\n    PillsLayout: PillsLayout,\n    TabItemContent: {\n      props: ['tab'],\n      render: function render(h) {\n        return h('div', [this.tab.$slots.title || this.tab.title]);\n      }\n    }\n  },\n  provide: function provide() {\n    return {\n      addTab: this.addTab,\n      removeTab: this.removeTab\n    };\n  },\n  computed: {\n    layoutComponent: function layoutComponent() {\n      return this.pills ? 'pills-layout' : 'tabs-layout';\n    }\n  },\n  props: {\n    type: {\n      type: String,\n      default: '',\n      validator: function validator(value) {\n        var acceptedValues = ['', 'primary', 'info', 'success', 'warning', 'danger'];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Tabs type (primary|info|danger|default|warning|success)'\n    },\n    pills: {\n      type: Boolean,\n      description: 'Whether tabs are pills'\n    },\n    activeTab: {\n      type: String,\n      default: '',\n      description: 'Default active tab name'\n    },\n    tabNavWrapperClasses: {\n      type: [String, Object],\n      default: '',\n      description: 'Tab Nav wrapper (div) css classes'\n    },\n    tabNavClasses: {\n      type: [String, Object],\n      default: '',\n      description: 'Tab Nav (ul) css classes'\n    },\n    tabContentClasses: {\n      type: [String, Object],\n      default: '',\n      description: 'Tab content css classes'\n    },\n    vertical: {\n      type: Boolean,\n      description: 'Whether tabs are vertical'\n    },\n    verticalNavClasses: {\n      type: [String, Object],\n      default: 'col-lg-4 col-md-5 col-sm-4 col-6',\n      description: 'Vertical tab css classes'\n    },\n    verticalTabContentClasses: {\n      type: [String, Object],\n      default: 'col-lg-8 col-md-7 col-sm-8 col-6',\n      description: 'Vertical Tab content css classes'\n    },\n    icons: {\n      type: Boolean,\n      description: 'Whether tabs should be of icon type (small no text)'\n    },\n    centered: {\n      type: Boolean,\n      description: 'Whether tabs are centered'\n    },\n    value: {\n      type: String,\n      description: 'Initial value (active tab)'\n    }\n  },\n  data: function data() {\n    return {\n      tabs: []\n    };\n  },\n  methods: {\n    findAndActivateTab: function findAndActivateTab(title) {\n      var tabToActivate = this.tabs.find(function (t) {\n        return t.title === title;\n      });\n      if (tabToActivate) {\n        this.activateTab(tabToActivate);\n      }\n    },\n    activateTab: function activateTab(tab) {\n      if (this.handleClick) {\n        this.handleClick(tab);\n      }\n      this.deactivateTabs();\n      tab.active = true;\n    },\n    deactivateTabs: function deactivateTabs() {\n      this.tabs.forEach(function (tab) {\n        tab.active = false;\n      });\n    },\n    addTab: function addTab(tab) {\n      var index = this.$slots.default.indexOf(tab.$vnode);\n      if (!this.activeTab && index === 0) {\n        tab.active = true;\n      }\n      if (this.activeTab === tab.name) {\n        tab.active = true;\n      }\n      this.tabs.splice(index, 0, tab);\n    },\n    removeTab: function removeTab(tab) {\n      var tabs = this.tabs;\n      var index = tabs.indexOf(tab);\n      if (index > -1) {\n        tabs.splice(index, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.$nextTick(function () {\n      if (_this.value) {\n        _this.findAndActivateTab(_this.value);\n      }\n    });\n  },\n  watch: {\n    value: function value(newVal) {\n      this.findAndActivateTab(newVal);\n    }\n  }\n};","map":{"version":3,"names":["PillsLayout","TabsLayout","name","components","TabItemContent","props","render","h","tab","$slots","title","provide","addTab","removeTab","computed","layoutComponent","pills","type","String","default","validator","value","acceptedValues","indexOf","description","Boolean","activeTab","tabNavWrapperClasses","Object","tabNavClasses","tabContentClasses","vertical","verticalNavClasses","verticalTabContentClasses","icons","centered","data","tabs","methods","findAndActivateTab","tabToActivate","find","t","activateTab","handleClick","deactivateTabs","active","forEach","index","$vnode","splice","mounted","_this","$nextTick","watch","newVal"],"sources":["src/components/UIComponents/Tabs/Tabs.vue"],"sourcesContent":["<template>\n  <component :is=\"layoutComponent\"\n             :vertical-nav-classes=\"verticalNavClasses\"\n             :vertical-tab-content-classes=\"verticalTabContentClasses\"\n             :vertical=\"vertical\">\n    <template slot=\"nav\">\n      <ul class=\"nav\"\n          role=\"tablist\"\n          :class=\"\n            [type ? `nav-pills-${type}`: '',\n              pills ? 'nav-pills': 'nav-tabs',\n             {'nav-pills-icons': icons},\n             {'flex-column nav-stacked': vertical},\n             {'justify-content-center': centered},\n             tabNavClasses\n            ]\">\n\n        <li v-for=\"tab in tabs\"\n            class=\"nav-item\"\n            :key=\"tab.id || tab.title\">\n\n          <a data-toggle=\"tab\"\n             role=\"tab\"\n             class=\"nav-link\"\n             :href=\"`#${tab.id || tab.title}`\"\n             @click.prevent=\"activateTab(tab)\"\n             :aria-selected=\"tab.active\"\n             :class=\"{active: tab.active}\">\n            <tab-item-content :tab=\"tab\">\n            </tab-item-content>\n          </a>\n\n        </li>\n\n      </ul>\n    </template>\n    <div slot=\"content\" class=\"tab-content\"\n         :class=\"[tabContentClasses]\">\n      <slot></slot>\n    </div>\n  </component>\n</template>\n\n<script>\n  import PillsLayout from './PillsLayout'\n  import TabsLayout from './TabsLayout'\n  export default {\n    name: 'tabs',\n    components: {\n      TabsLayout,\n      PillsLayout,\n      TabItemContent: {\n        props: ['tab'],\n        render(h) {\n          return h('div', [this.tab.$slots.title || this.tab.title])\n        }\n      }\n    },\n    provide() {\n      return {\n        addTab: this.addTab,\n        removeTab: this.removeTab\n      }\n    },\n    computed: {\n      layoutComponent() {\n        return this.pills ? 'pills-layout' : 'tabs-layout';\n      }\n    },\n    props: {\n      type: {\n        type: String,\n        default: '',\n        validator: (value) => {\n          let acceptedValues = ['', 'primary', 'info', 'success', 'warning', 'danger']\n          return acceptedValues.indexOf(value) !== -1\n        },\n        description: 'Tabs type (primary|info|danger|default|warning|success)'\n      },\n      pills: {\n        type: Boolean,\n        description: 'Whether tabs are pills'\n      },\n      activeTab: {\n        type: String,\n        default: '',\n        description: 'Default active tab name'\n      },\n      tabNavWrapperClasses: {\n        type: [String, Object],\n        default: '',\n        description: 'Tab Nav wrapper (div) css classes'\n      },\n      tabNavClasses: {\n        type: [String, Object],\n        default: '',\n        description: 'Tab Nav (ul) css classes'\n      },\n      tabContentClasses: {\n        type: [String, Object],\n        default: '',\n        description: 'Tab content css classes'\n      },\n      vertical: {\n        type: Boolean,\n        description: 'Whether tabs are vertical'\n      },\n      verticalNavClasses: {\n        type: [String, Object],\n        default: 'col-lg-4 col-md-5 col-sm-4 col-6',\n        description: 'Vertical tab css classes'\n      },\n      verticalTabContentClasses: {\n        type: [String, Object],\n        default: 'col-lg-8 col-md-7 col-sm-8 col-6',\n        description: 'Vertical Tab content css classes'\n      },\n      icons: {\n        type: Boolean,\n        description: 'Whether tabs should be of icon type (small no text)'\n      },\n      centered: {\n        type: Boolean,\n        description: 'Whether tabs are centered'\n      },\n      value: {\n        type: String,\n        description: 'Initial value (active tab)'\n      }\n    },\n    data() {\n      return {\n        tabs: []\n      }\n    },\n    methods: {\n      findAndActivateTab(title){\n        let tabToActivate = this.tabs.find(t=> t.title === title);\n        if(tabToActivate){\n          this.activateTab(tabToActivate);\n        }\n      },\n      activateTab(tab) {\n        if (this.handleClick) {\n          this.handleClick(tab)\n        }\n        this.deactivateTabs()\n        tab.active = true\n      },\n      deactivateTabs() {\n        this.tabs.forEach(tab => {\n          tab.active = false\n        });\n      },\n      addTab(tab) {\n        const index = this.$slots.default.indexOf(tab.$vnode)\n        if (!this.activeTab && index === 0) {\n          tab.active = true;\n        }\n        if (this.activeTab === tab.name) {\n          tab.active = true\n        }\n        this.tabs.splice(index, 0, tab)\n      },\n      removeTab(tab) {\n        const tabs = this.tabs\n        const index = tabs.indexOf(tab)\n        if (index > -1) {\n          tabs.splice(index, 1)\n        }\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        if (this.value) {\n          this.findAndActivateTab(this.value);\n        }\n      })\n    },\n    watch: {\n      value(newVal) {\n        this.findAndActivateTab(newVal);\n      }\n    }\n  }\n</script>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}