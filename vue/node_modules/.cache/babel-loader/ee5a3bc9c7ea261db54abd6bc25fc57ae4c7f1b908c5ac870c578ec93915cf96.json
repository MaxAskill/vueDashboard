{"ast":null,"code":"import { Pie } from 'vue-chartjs';\nimport pluginChartText from './plugins/plugin-chart-text';\nconst defaultOptions = {\n  elements: {\n    center: {\n      text: '60%',\n      color: '#66615c',\n      fontStyle: 'Arial',\n      sidePadding: 60\n    }\n  },\n  cutoutPercentage: 90,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  },\n  scales: {\n    yAxes: [{\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: \"transparent\",\n        color: 'rgba(255,255,255,0.05)'\n      }\n    }],\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(255,255,255,0.1)',\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        display: false\n      }\n    }]\n  }\n};\nexport default {\n  name: 'doughnut-chart',\n  extends: Pie,\n  props: {\n    labels: {\n      type: [Object, Array],\n      description: 'Chart labels. This is overridden when `data` is provided'\n    },\n    datasets: {\n      type: [Object, Array],\n      description: 'Chart datasets. This is overridden when `data` is provided'\n    },\n    data: {\n      type: [Object, Array],\n      description: 'Chart.js chart data (overrides all default data)'\n    },\n    color: {\n      type: String,\n      description: 'Chart color. This is overridden when `data` is provided'\n    },\n    extraOptions: {\n      type: Object,\n      description: 'Chart.js options'\n    },\n    title: {\n      type: String,\n      description: 'Chart title'\n    }\n  },\n  methods: {\n    assignChartData() {\n      return {\n        labels: this.labels || [],\n        datasets: this.datasets ? this.datasets : [{\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [this.color || '#4acccd', this.secondaryColor || '#f4f3ef'],\n          borderWidth: 0,\n          data: this.data || []\n        }]\n      };\n    },\n    assignChartOptions(initialConfig) {\n      let extraOptions = this.extraOptions || {};\n      return {\n        ...initialConfig,\n        ...extraOptions\n      };\n    }\n  },\n  mounted() {\n    this.addPlugin(pluginChartText);\n    this.chartData = this.assignChartData({});\n    this.options = this.assignChartOptions(defaultOptions);\n    this.options.elements.center.text = this.data ? `${this.data[0]}%` : null;\n    this.renderChart(this.chartData, this.options);\n  }\n};","map":{"version":3,"names":["Pie","pluginChartText","defaultOptions","elements","center","text","color","fontStyle","sidePadding","cutoutPercentage","legend","display","tooltips","enabled","scales","yAxes","ticks","gridLines","drawBorder","zeroLineColor","xAxes","barPercentage","name","extends","props","labels","type","Object","Array","description","datasets","data","String","extraOptions","title","methods","assignChartData","pointRadius","pointHoverRadius","backgroundColor","secondaryColor","borderWidth","assignChartOptions","initialConfig","mounted","addPlugin","chartData","options","renderChart"],"sources":["/var/www/html/PRESTO/vue/src/components/UIComponents/Charts/DoughnutChart.js"],"sourcesContent":["import { Pie } from 'vue-chartjs'\nimport pluginChartText from './plugins/plugin-chart-text';\n\nconst defaultOptions = {\n  elements: {\n    center: {\n      text: '60%',\n      color: '#66615c', // Default is #000000\n      fontStyle: 'Arial', // Default is Arial\n      sidePadding: 60 // Defualt is 20 (as a percentage)\n    }\n  },\n  cutoutPercentage: 90,\n  legend: {\n\n    display: false\n  },\n\n  tooltips: {\n    enabled: false\n  },\n\n  scales: {\n    yAxes: [{\n\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        drawBorder: false,\n        zeroLineColor: \"transparent\",\n        color: 'rgba(255,255,255,0.05)'\n      }\n\n    }],\n\n    xAxes: [{\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: 'rgba(255,255,255,0.1)',\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        display: false,\n      }\n    }]\n  },\n};\n\nexport default {\n  name: 'doughnut-chart',\n  extends: Pie,\n  props: {\n    labels: {\n      type: [Object, Array],\n      description: 'Chart labels. This is overridden when `data` is provided'\n    },\n    datasets: {\n      type: [Object, Array],\n      description: 'Chart datasets. This is overridden when `data` is provided'\n    },\n    data: {\n      type: [Object, Array],\n      description: 'Chart.js chart data (overrides all default data)'\n    },\n    color: {\n      type: String,\n      description: 'Chart color. This is overridden when `data` is provided'\n    },\n    extraOptions: {\n      type: Object,\n      description: 'Chart.js options'\n    },\n    title: {\n      type: String,\n      description: 'Chart title'\n    },\n  },\n  methods: {\n    assignChartData() {\n      return {\n        labels: this.labels || [],\n        datasets: this.datasets ? this.datasets : [{\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [this.color || '#4acccd', this.secondaryColor || '#f4f3ef'],\n          borderWidth: 0,\n          data: this.data || []\n        }]\n      }\n    },\n    assignChartOptions(initialConfig) {\n      let extraOptions = this.extraOptions || {};\n      return {\n        ...initialConfig,\n        ...extraOptions\n      };\n    }\n  },\n  mounted() {\n    this.addPlugin(pluginChartText);\n    this.chartData = this.assignChartData({});\n    this.options = this.assignChartOptions(defaultOptions);\n    this.options.elements.center.text = this.data ? `${this.data[0]}%` : null;\n    this.renderChart(this.chartData, this.options);\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,aAAa;AACjC,OAAOC,eAAe,MAAM,6BAA6B;AAEzD,MAAMC,cAAc,GAAG;EACrBC,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,SAAS;MAChBC,SAAS,EAAE,OAAO;MAClBC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,gBAAgB,EAAE,EAAE;EACpBC,MAAM,EAAE;IAENC,OAAO,EAAE;EACX,CAAC;EAEDC,QAAQ,EAAE;IACRC,OAAO,EAAE;EACX,CAAC;EAEDC,MAAM,EAAE;IACNC,KAAK,EAAE,CAAC;MAENC,KAAK,EAAE;QACLL,OAAO,EAAE;MACX,CAAC;MACDM,SAAS,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBC,aAAa,EAAE,aAAa;QAC5Bb,KAAK,EAAE;MACT;IAEF,CAAC,CAAC;IAEFc,KAAK,EAAE,CAAC;MACNC,aAAa,EAAE,GAAG;MAClBJ,SAAS,EAAE;QACTC,UAAU,EAAE,KAAK;QACjBZ,KAAK,EAAE,uBAAuB;QAC9Ba,aAAa,EAAE;MACjB,CAAC;MACDH,KAAK,EAAE;QACLL,OAAO,EAAE;MACX;IACF,CAAC;EACH;AACF,CAAC;AAED,eAAe;EACbW,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAEvB,GAAG;EACZwB,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAE,CAACC,MAAM,EAAEC,KAAK,CAAC;MACrBC,WAAW,EAAE;IACf,CAAC;IACDC,QAAQ,EAAE;MACRJ,IAAI,EAAE,CAACC,MAAM,EAAEC,KAAK,CAAC;MACrBC,WAAW,EAAE;IACf,CAAC;IACDE,IAAI,EAAE;MACJL,IAAI,EAAE,CAACC,MAAM,EAAEC,KAAK,CAAC;MACrBC,WAAW,EAAE;IACf,CAAC;IACDvB,KAAK,EAAE;MACLoB,IAAI,EAAEM,MAAM;MACZH,WAAW,EAAE;IACf,CAAC;IACDI,YAAY,EAAE;MACZP,IAAI,EAAEC,MAAM;MACZE,WAAW,EAAE;IACf,CAAC;IACDK,KAAK,EAAE;MACLR,IAAI,EAAEM,MAAM;MACZH,WAAW,EAAE;IACf;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,OAAO;QACLX,MAAM,EAAE,IAAI,CAACA,MAAM,IAAI,EAAE;QACzBK,QAAQ,EAAE,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACA,QAAQ,GAAG,CAAC;UACzCO,WAAW,EAAE,CAAC;UACdC,gBAAgB,EAAE,CAAC;UACnBC,eAAe,EAAE,CAAC,IAAI,CAACjC,KAAK,IAAI,SAAS,EAAE,IAAI,CAACkC,cAAc,IAAI,SAAS,CAAC;UAC5EC,WAAW,EAAE,CAAC;UACdV,IAAI,EAAE,IAAI,CAACA,IAAI,IAAI;QACrB,CAAC;MACH,CAAC;IACH,CAAC;IACDW,kBAAkBA,CAACC,aAAa,EAAE;MAChC,IAAIV,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI,CAAC,CAAC;MAC1C,OAAO;QACL,GAAGU,aAAa;QAChB,GAAGV;MACL,CAAC;IACH;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC5C,eAAe,CAAC;IAC/B,IAAI,CAAC6C,SAAS,GAAG,IAAI,CAACV,eAAe,CAAC,CAAC,CAAC,CAAC;IACzC,IAAI,CAACW,OAAO,GAAG,IAAI,CAACL,kBAAkB,CAACxC,cAAc,CAAC;IACtD,IAAI,CAAC6C,OAAO,CAAC5C,QAAQ,CAACC,MAAM,CAACC,IAAI,GAAG,IAAI,CAAC0B,IAAI,GAAI,GAAE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAE,GAAE,GAAG,IAAI;IACzE,IAAI,CAACiB,WAAW,CAAC,IAAI,CAACF,SAAS,EAAE,IAAI,CAACC,OAAO,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}