{"ast":null,"code":"import { CollapseTransition } from 'vue2-transitions';\nexport default {\n  name: 'navbar',\n  props: {\n    showNavbar: {\n      type: Boolean,\n      description: \"Whether navbar is visible\"\n    },\n    navbarMenuClasses: {\n      type: [String, Object],\n      description: 'Navbar menu css classes'\n    },\n    transparent: {\n      type: Boolean,\n      default: true,\n      description: 'Whether navbar is transparent'\n    },\n    position: {\n      type: String,\n      default: 'absolute',\n      description: 'Navbar position (absolute|fixed|relative)'\n    },\n    type: {\n      type: String,\n      default: 'white',\n      validator(value) {\n        return ['white', 'default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value);\n      },\n      description: 'Navbar type (primary|info|danger|default|warning|success)'\n    }\n  },\n  model: {\n    prop: 'showNavbar',\n    event: 'change'\n  },\n  components: {\n    CollapseTransition\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let navPosition = `navbar-${this.position}`;\n      return [{\n        'navbar-transparent': !this.showNavbar && this.transparent\n      }, {\n        [color]: this.showNavbar || !this.transparent\n      }, navPosition];\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.showNavbar);\n    }\n  }\n};","map":{"version":3,"names":["CollapseTransition","name","props","showNavbar","type","Boolean","description","navbarMenuClasses","String","Object","transparent","default","position","validator","value","includes","model","prop","event","components","computed","classes","color","navPosition","methods","toggleMenu","$emit"],"sources":["src/components/UIComponents/Navbar/Navbar.vue"],"sourcesContent":["<template>\n  <nav :class=\"classes\" class=\"navbar navbar-expand-lg\">\n    <div class=\"container-fluid\">\n      <slot></slot>\n      <slot name=\"toggle-button\">\n        <button aria-controls=\"navigation-index\"\n                @click=\"toggleMenu\"\n                aria-expanded=\"true\" aria-label=\"Toggle navigation\"\n                class=\"navbar-toggler\" data-toggle=\"collapse\" type=\"button\"><span\n          class=\"navbar-toggler-bar navbar-kebab\"></span><span class=\"navbar-toggler-bar navbar-kebab\"></span><span\n          class=\"navbar-toggler-bar navbar-kebab\"></span></button>\n      </slot>\n      <CollapseTransition>\n        <div class=\"collapse navbar-collapse justify-content-end show\"\n             :class=\"navbarMenuClasses\"\n             v-show=\"showNavbar\"\n             id=\"navigation\">\n          <ul class=\"navbar-nav\">\n            <slot name=\"navbar-menu\"></slot>\n          </ul>\n        </div>\n      </CollapseTransition>\n    </div>\n  </nav>\n</template>\n<script>\n  import { CollapseTransition } from 'vue2-transitions';\n\n  export default {\n    name: 'navbar',\n    props: {\n      showNavbar: {\n        type: Boolean,\n        description: \"Whether navbar is visible\"\n      },\n      navbarMenuClasses: {\n        type: [String, Object],\n        description: 'Navbar menu css classes'\n      },\n      transparent: {\n        type: Boolean,\n        default: true,\n        description: 'Whether navbar is transparent'\n      },\n      position: {\n        type: String,\n        default: 'absolute',\n        description: 'Navbar position (absolute|fixed|relative)'\n      },\n      type: {\n        type: String,\n        default: 'white',\n        validator(value) {\n          return ['white', 'default', 'primary', 'danger', 'success', 'warning', 'info'].includes(value);\n        },\n        description: 'Navbar type (primary|info|danger|default|warning|success)'\n      }\n    },\n    model: {\n      prop: 'showNavbar',\n      event: 'change'\n    },\n    components: {\n      CollapseTransition\n    },\n    computed: {\n      classes() {\n        let color = `bg-${this.type}`;\n        let navPosition = `navbar-${this.position}`;\n        return [\n          { 'navbar-transparent': !this.showNavbar && this.transparent },\n          { [color]: this.showNavbar || !this.transparent },\n          navPosition]\n      }\n    },\n    methods: {\n      toggleMenu() {\n        this.$emit('change', !this.showNavbar);\n      }\n    }\n  }\n</script>\n<style scoped>\n  .navbar-relative {\n    position: relative;\n  }\n</style>\n"],"mappings":"AA0BA,SAAAA,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,WAAA;IACA;IACAC,iBAAA;MACAH,IAAA,GAAAI,MAAA,EAAAC,MAAA;MACAH,WAAA;IACA;IACAI,WAAA;MACAN,IAAA,EAAAC,OAAA;MACAM,OAAA;MACAL,WAAA;IACA;IACAM,QAAA;MACAR,IAAA,EAAAI,MAAA;MACAG,OAAA;MACAL,WAAA;IACA;IACAF,IAAA;MACAA,IAAA,EAAAI,MAAA;MACAG,OAAA;MACAE,UAAAC,KAAA;QACA,+EAAAC,QAAA,CAAAD,KAAA;MACA;MACAR,WAAA;IACA;EACA;EACAU,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,UAAA;IACAnB;EACA;EACAoB,QAAA;IACAC,QAAA;MACA,IAAAC,KAAA,cAAAlB,IAAA;MACA,IAAAmB,WAAA,kBAAAX,QAAA;MACA,QACA;QAAA,4BAAAT,UAAA,SAAAO;MAAA,GACA;QAAA,CAAAY,KAAA,QAAAnB,UAAA,UAAAO;MAAA,GACAa,WAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAC,KAAA,iBAAAvB,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}